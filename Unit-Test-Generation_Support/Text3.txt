TranslationUnitDecl 0xd0c4b0 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0xd0c9f8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0xd0c720 '__int128'
|-TypedefDecl 0xd0ca58 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0xd0c740 'unsigned __int128'
|-TypedefDecl 0xd0cd38 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0xd0cb30 'struct __NSConstantString_tag'
|   `-Record 0xd0caa8 '__NSConstantString_tag'
|-TypedefDecl 0xd0cd98 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0xd0c680 'unsigned long long'
|-TypedefDecl 0xd0ce28 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0xd0cdf0 'char *'
|   `-BuiltinType 0xd0c540 'char'
|-TypedefDecl 0xd0ce88 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0xd0cdf0 'char *'
|   `-BuiltinType 0xd0c540 'char'
|-VarDecl 0xd0cee8 <.\3\temp.c:1:1, col:5> col:5 used a 'int'
|-VarDecl 0xd0cf98 <col:1, col:8> col:8 used b 'int'
`-FunctionDecl 0xd0d058 <line:3:1, line:6:1> line:3:5 f1 'int ()'
  `-CompoundStmt 0x4aa4b78 <col:10, line:6:1>
    |-ForStmt 0x4aa4b00 <line:4:5, col:37>
    | |-BinaryOperator 0xd0d150 <col:10, col:14> 'int' '='
    | | |-DeclRefExpr 0xd0d100 <col:10> 'int' lvalue Var 0xd0cee8 'a' 'int'
    | | `-IntegerLiteral 0xd0d128 <col:14> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x4aa49e0 <col:17, col:21> 'int' '<'
    | | |-ImplicitCastExpr 0xd0d1c8 <col:17> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0xd0d178 <col:17> 'int' lvalue Var 0xd0cee8 'a' 'int'
    | | `-IntegerLiteral 0xd0d1a0 <col:21> 'int' 10
    | |-UnaryOperator 0x4aa4a30 <col:25, col:26> 'int' postfix '++'
    | | `-DeclRefExpr 0x4aa4a08 <col:25> 'int' lvalue Var 0xd0cee8 'a' 'int'
    | `-CompoundStmt 0x4aa4ae0 <col:30, col:37>
    |   `-BinaryOperator 0x4aa4ab8 <col:31, col:35> 'int' '='
    |     |-DeclRefExpr 0x4aa4a50 <col:31> 'int' lvalue Var 0xd0cf98 'b' 'int'
    |     `-ImplicitCastExpr 0x4aa4aa0 <col:35> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x4aa4a78 <col:35> 'int' lvalue Var 0xd0cee8 'a' 'int'
    `-ReturnStmt 0x4aa4b60 <line:5:5, col:12>
      `-IntegerLiteral 0x4aa4b38 <col:12> 'int' 0