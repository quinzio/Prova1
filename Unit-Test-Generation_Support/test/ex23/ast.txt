TranslationUnitDecl 0x278a5363f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x278a5364820 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x278a5364520 '__int128'
|-TypedefDecl 0x278a5364890 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x278a5364540 'unsigned __int128'
|-TypedefDecl 0x278a5364bb8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x278a5364970 'struct __NSConstantString_tag'
|   `-Record 0x278a53648e8 '__NSConstantString_tag'
|-TypedefDecl 0x278a5364c28 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x278a5364160 'unsigned long long'
|-TypedefDecl 0x278a5364cc0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x278a5364c80 'char *'
|   `-BuiltinType 0x278a5364020 'char'
|-TypedefDecl 0x278a5364d30 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x278a5364c80 'char *'
|   `-BuiltinType 0x278a5364020 'char'
|-VarDecl 0x278a5364da0 <temp.c:1:1, col:5> col:5 used a 'int'
|-VarDecl 0x278a5364e68 <col:1, col:8> col:8 used b 'int'
|-VarDecl 0x278a5364ee8 <col:1, col:11> col:11 used c 'int'
|-VarDecl 0x278a550cec0 <col:1, col:14> col:14 used d 'int'
`-FunctionDecl 0x278a550cfa0 <line:5:1, line:14:1> line:5:5 main 'int ()'
  `-CompoundStmt 0x278a550db08 <col:12, line:14:1>
    |-BinaryOperator 0x278a550d0e0 <line:6:5, col:13> 'int' '='
    | |-DeclRefExpr 0x278a550d040 <col:5> 'int' lvalue Var 0x278a5364da0 'a' 'int'
    | `-BinaryOperator 0x278a550d0c0 <col:9, col:13> 'int' '+'
    |   |-ImplicitCastExpr 0x278a550d0a8 <col:9> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x278a550d060 <col:9> 'int' lvalue Var 0x278a5364da0 'a' 'int'
    |   `-IntegerLiteral 0x278a550d080 <col:13> 'int' 1
    |-BinaryOperator 0x278a550d508 <line:7:5, col:70> 'int' '='
    | |-DeclRefExpr 0x278a550d100 <col:5> 'int' lvalue Var 0x278a5364da0 'a' 'int'
    | `-BinaryOperator 0x278a550d4e8 <col:9, col:70> 'int' '&&'
    |   |-ParenExpr 0x278a550d438 <col:9, col:59> 'int'
    |   | `-BinaryOperator 0x278a550d418 <col:10, col:58> 'int' '<'
    |   |   |-BinaryOperator 0x278a550d3d0 <col:10, col:54> 'int' '-'
    |   |   | |-ParenExpr 0x278a550d2a8 <col:10, col:37> 'int'
    |   |   | | `-BinaryOperator 0x278a550d288 <col:11, col:36> 'int' '/'
    |   |   | |   |-BinaryOperator 0x278a550d240 <col:11, col:32> 'int' '*'
    |   |   | |   | |-ParenExpr 0x278a550d190 <col:11, col:20> 'int'
    |   |   | |   | | `-BinaryOperator 0x278a550d170 <col:12, col:16> 'int' '+'
    |   |   | |   | |   |-IntegerLiteral 0x278a550d120 <col:12> 'int' 1
    |   |   | |   | |   `-IntegerLiteral 0x278a550d148 <col:16> 'int' 1000
    |   |   | |   | `-ParenExpr 0x278a550d220 <col:24, col:32> 'int'
    |   |   | |   |   `-BinaryOperator 0x278a550d200 <line:3:12, line:7:31> 'int' '>>'
    |   |   | |   |     |-IntegerLiteral 0x278a550d1b0 <line:3:12> 'int' 5
    |   |   | |   |     `-IntegerLiteral 0x278a550d1d8 <line:7:31> 'int' 1
    |   |   | |   `-IntegerLiteral 0x278a550d260 <col:36> 'int' 2
    |   |   | `-CStyleCastExpr 0x278a550d3a8 <col:41, col:54> 'int' <FloatingToIntegral>
    |   |   |   `-ParenExpr 0x278a550d388 <col:46, col:54> 'double'
    |   |   |     `-BinaryOperator 0x278a550d330 <col:47, col:51> 'double' '*'
    |   |   |       |-ImplicitCastExpr 0x278a550d318 <col:47> 'double' <IntegralToFloating>
    |   |   |       | `-IntegerLiteral 0x278a550d2c8 <col:47> 'int' 3
    |   |   |       `-FloatingLiteral 0x278a550d2f0 <col:51> 'double' 4.300000e+00
    |   |   `-IntegerLiteral 0x278a550d3f0 <col:58> 'int' 1
    |   `-ParenExpr 0x278a550d4c8 <col:64, col:70> 'int'
    |     `-BinaryOperator 0x278a550d4a8 <col:65, col:69> 'int' '>'
    |       |-IntegerLiteral 0x278a550d458 <col:65> 'int' 9
    |       `-IntegerLiteral 0x278a550d480 <col:69> 'int' 8
    |-IfStmt 0x278a550daa8 <line:8:5, line:12:5> has_else
    | |-BinaryOperator 0x278a550d870 <line:8:9, col:58> 'int' '<'
    | | |-ImplicitCastExpr 0x278a550d858 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x278a550d528 <col:9> 'int' lvalue Var 0x278a5364ee8 'c' 'int'
    | | `-ParenExpr 0x278a550d838 <col:13, col:58> 'int'
    | |   `-BinaryOperator 0x278a550d818 <col:14, col:57> 'int' '+'
    | |     |-BinaryOperator 0x278a550d720 <col:14, col:44> 'int' '/'
    | |     | |-BinaryOperator 0x278a550d6d8 <col:14, col:40> 'int' '*'
    | |     | | |-ParenExpr 0x278a550d690 <col:14, col:36> 'int'
    | |     | | | `-BinaryOperator 0x278a550d670 <col:15, col:34> 'int' '-'
    | |     | | |   |-BinaryOperator 0x278a550d628 <col:15, col:30> 'int' '-'
    | |     | | |   | |-BinaryOperator 0x278a550d5e0 <col:15, col:24> 'int' '+'
    | |     | | |   | | |-BinaryOperator 0x278a550d598 <col:15, col:21> 'int' '+'
    | |     | | |   | | | |-IntegerLiteral 0x278a550d548 <col:15> 'int' 500
    | |     | | |   | | | `-IntegerLiteral 0x278a550d570 <col:21> 'int' 3
    | |     | | |   | | `-IntegerLiteral 0x278a550d5b8 <col:24> 'int' 700
    | |     | | |   | `-IntegerLiteral 0x278a550d600 <col:30> 'int' 5
    | |     | | |   `-IntegerLiteral 0x278a550d648 <col:34> 'int' 80
    | |     | | `-IntegerLiteral 0x278a550d6b0 <col:40> 'int' 2
    | |     | `-IntegerLiteral 0x278a550d6f8 <col:44> 'int' 3
    | |     `-ParenExpr 0x278a550d7f8 <col:47, col:57> 'int'
    | |       `-BinaryOperator 0x278a550d7d8 <col:48, col:55> 'int' '+'
    | |         |-BinaryOperator 0x278a550d790 <col:48, col:52> 'int' '+'
    | |         | |-IntegerLiteral 0x278a550d740 <col:48> 'int' 100
    | |         | `-IntegerLiteral 0x278a550d768 <col:52> 'int' 99
    | |         `-IntegerLiteral 0x278a550d7b0 <col:55> 'int' 98
    | |-CompoundStmt 0x278a550d9a8 <col:61, line:10:5>
    | | `-BinaryOperator 0x278a550d988 <line:9:9, col:21> 'int' '='
    | |   |-DeclRefExpr 0x278a550d890 <col:9> 'int' lvalue Var 0x278a5364e68 'b' 'int'
    | |   `-BinaryOperator 0x278a550d968 <col:13, col:21> 'int' '+'
    | |     |-BinaryOperator 0x278a550d920 <col:13, col:17> 'int' '+'
    | |     | |-ImplicitCastExpr 0x278a550d8f0 <col:13> 'int' <LValueToRValue>
    | |     | | `-DeclRefExpr 0x278a550d8b0 <col:13> 'int' lvalue Var 0x278a5364da0 'a' 'int'
    | |     | `-ImplicitCastExpr 0x278a550d908 <col:17> 'int' <LValueToRValue>
    | |     |   `-DeclRefExpr 0x278a550d8d0 <col:17> 'int' lvalue Var 0x278a550cec0 'd' 'int'
    | |     `-IntegerLiteral 0x278a550d940 <col:21> 'int' 1
    | `-CompoundStmt 0x278a550da90 <line:10:12, line:12:5>
    |   `-BinaryOperator 0x278a550da70 <line:11:9, col:17> 'int' '='
    |     |-DeclRefExpr 0x278a550d9c0 <col:9> 'int' lvalue Var 0x278a5364da0 'a' 'int'
    |     `-BinaryOperator 0x278a550da50 <col:13, col:17> 'int' '+'
    |       |-ImplicitCastExpr 0x278a550da20 <col:13> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x278a550d9e0 <col:13> 'int' lvalue Var 0x278a5364ee8 'c' 'int'
    |       `-ImplicitCastExpr 0x278a550da38 <col:17> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x278a550da00 <col:17> 'int' lvalue Var 0x278a550cec0 'd' 'int'
    `-ReturnStmt 0x278a550daf8 <line:13:5, col:12>
      `-IntegerLiteral 0x278a550dad0 <col:12> 'int' 0
C:\Users\Davide\AppData\Local\Temp\temp-6a6efd.o : fatal error LNK1136: invalid or corrupt file
