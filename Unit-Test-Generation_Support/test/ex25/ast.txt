TranslationUnitDecl 0x20a4ab54d38 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x20a4ab555d0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x20a4ab552d0 '__int128'
|-TypedefDecl 0x20a4ab55640 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x20a4ab552f0 'unsigned __int128'
|-TypedefDecl 0x20a4ab55948 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x20a4ab55720 'struct __NSConstantString_tag'
|   `-Record 0x20a4ab55698 '__NSConstantString_tag'
|-TypedefDecl 0x20a4ab559b8 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x20a4ab54f10 'unsigned long long'
|-TypedefDecl 0x20a4ab55a50 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x20a4ab55a10 'char *'
|   `-BuiltinType 0x20a4ab54dd0 'char'
|-TypedefDecl 0x20a4ab55ac0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x20a4ab55a10 'char *'
|   `-BuiltinType 0x20a4ab54dd0 'char'
|-FunctionDecl 0x20a4cbb1f60 <temp.c:1:1, col:33> col:5 used f1 'int (int, int, int)'
| |-ParmVarDecl 0x20a4ab55b30 <col:8, col:12> col:12 f1a 'int'
| |-ParmVarDecl 0x20a4ab55bb0 <col:17, col:21> col:21 f1b 'int'
| `-ParmVarDecl 0x20a4ab55c30 <col:26, col:30> col:30 f1c 'int'
|-FunctionDecl 0x20a4cbb2220 <line:2:1, col:33> col:5 used f2 'int (int, int, int)'
| |-ParmVarDecl 0x20a4cbb2078 <col:8, col:12> col:12 f2a 'int'
| |-ParmVarDecl 0x20a4cbb20f8 <col:17, col:21> col:21 f2b 'int'
| `-ParmVarDecl 0x20a4cbb2178 <col:26, col:30> col:30 f2c 'int'
|-FunctionDecl 0x20a4cbb2498 <line:3:1, col:33> col:5 used f3 'int (int, int, int)'
| |-ParmVarDecl 0x20a4cbb22f0 <col:8, col:12> col:12 f3a 'int'
| |-ParmVarDecl 0x20a4cbb2370 <col:17, col:21> col:21 f3b 'int'
| `-ParmVarDecl 0x20a4cbb23f0 <col:26, col:30> col:30 f3c 'int'
|-FunctionDecl 0x20a4cbb2630 <line:4:1, col:18> col:5 fun1 'int (int)'
| `-ParmVarDecl 0x20a4cbb2568 <col:10, col:14> col:14 par1 'int'
|-VarDecl 0x20a4cbb26f0 <line:6:1, col:5> col:5 used a 'int'
|-VarDecl 0x20a4cbb2770 <line:7:1, col:5> col:5 used b 'int'
|-VarDecl 0x20a4cbb27f0 <line:8:1, col:5> col:5 c 'int'
|-VarDecl 0x20a4cbb2900 <line:9:1, col:8> col:5 d 'int [3]'
|-EnumDecl 0x20a4cbb2968 <line:10:1, line:14:1> line:10:1
| |-EnumConstantDecl 0x20a4cbb2a30 <line:11:1> col:1 EA 'int'
| |-EnumConstantDecl 0x20a4cbb2a88 <line:12:1> col:1 EB 'int'
| `-EnumConstantDecl 0x20a4cbb2ae0 <line:13:1> col:1 EC 'int'
|-FunctionDecl 0x20a4cbb2cf8 prev 0x20a4cbb2220 <line:16:1, line:18:1> line:16:5 used f2 'int (int, int, int)'
| |-ParmVarDecl 0x20a4cbb2b50 <col:8, col:12> col:12 used f2a 'int'
| |-ParmVarDecl 0x20a4cbb2bd0 <col:17, col:21> col:21 f2b 'int'
| |-ParmVarDecl 0x20a4cbb2c50 <col:26, col:30> col:30 f2c 'int'
| `-CompoundStmt 0x20a4cbb2df8 <col:34, line:18:1>
|   `-ReturnStmt 0x20a4cbb2de8 <line:17:5, col:12>
|     `-ImplicitCastExpr 0x20a4cbb2dd0 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x20a4cbb2db0 <col:12> 'int' lvalue ParmVar 0x20a4cbb2b50 'f2a' 'int'
|-FunctionDecl 0x20a4cbb2ec0 prev 0x20a4cbb2630 <line:21:1, line:26:1> line:21:5 fun1 'int (int)'
| |-ParmVarDecl 0x20a4cbb2e28 <col:10, col:14> col:14 used par1 'int'
| `-CompoundStmt 0x20a4cbb0358 <col:20, line:26:1>
|   |-BinaryOperator 0x20a4cbb0090 <line:22:2, col:19> 'int' '='
|   | |-DeclRefExpr 0x20a4cbaff48 <col:2> 'int' lvalue Var 0x20a4cbb26f0 'a' 'int'
|   | `-CallExpr 0x20a4cbb0040 <col:6, col:19> 'int'
|   |   |-ImplicitCastExpr 0x20a4cbb0028 <col:6> 'int (*)(int, int, int)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x20a4cbaff68 <col:6> 'int (int, int, int)' Function 0x20a4cbb1f60 'f1' 'int (int, int, int)'
|   |   |-IntegerLiteral 0x20a4cbaff88 <col:9> 'int' 1
|   |   |-IntegerLiteral 0x20a4cbaffb0 <col:12> 'int' 2
|   |   `-ImplicitCastExpr 0x20a4cbb0078 <col:15> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x20a4cbaffd8 <col:15> 'int' lvalue ParmVar 0x20a4cbb2e28 'par1' 'int'
|   |-BinaryOperator 0x20a4cbb01c8 <line:23:2, col:23> 'int' '='
|   | |-DeclRefExpr 0x20a4cbb00b0 <col:2> 'int' lvalue Var 0x20a4cbb26f0 'a' 'int'
|   | `-CallExpr 0x20a4cbb0190 <col:6, col:23> 'int'
|   |   |-ImplicitCastExpr 0x20a4cbb0178 <col:6> 'int (*)(int, int, int)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x20a4cbb00d0 <col:6> 'int (int, int, int)' Function 0x20a4cbb2cf8 'f2' 'int (int, int, int)'
|   |   |-IntegerLiteral 0x20a4cbb00f0 <col:9> 'int' 10
|   |   |-IntegerLiteral 0x20a4cbb0118 <col:13> 'int' 20
|   |   `-UnaryOperator 0x20a4cbb0160 <col:17, col:21> 'int' postfix '++'
|   |     `-DeclRefExpr 0x20a4cbb0140 <col:17> 'int' lvalue ParmVar 0x20a4cbb2e28 'par1' 'int'
|   |-BinaryOperator 0x20a4cbb0300 <line:24:2, col:23> 'int' '='
|   | |-DeclRefExpr 0x20a4cbb01e8 <col:2> 'int' lvalue Var 0x20a4cbb2770 'b' 'int'
|   | `-CallExpr 0x20a4cbb02c8 <col:6, col:23> 'int'
|   |   |-ImplicitCastExpr 0x20a4cbb02b0 <col:6> 'int (*)(int, int, int)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x20a4cbb0208 <col:6> 'int (int, int, int)' Function 0x20a4cbb2498 'f3' 'int (int, int, int)'
|   |   |-IntegerLiteral 0x20a4cbb0228 <col:9> 'int' 11
|   |   |-IntegerLiteral 0x20a4cbb0250 <col:13> 'int' 12
|   |   `-UnaryOperator 0x20a4cbb0298 <col:17, col:21> 'int' postfix '++'
|   |     `-DeclRefExpr 0x20a4cbb0278 <col:17> 'int' lvalue ParmVar 0x20a4cbb2e28 'par1' 'int'
|   `-ReturnStmt 0x20a4cbb0348 <line:25:2, col:9>
|     `-IntegerLiteral 0x20a4cbb0320 <col:9> 'int' 0
`-FunctionDecl 0x20a4cbb0438 prev 0x20a4cbb2ec0 <line:28:1, col:18> col:5 fun1 'int (int)'
  `-ParmVarDecl 0x20a4cbb03a0 <col:10, col:14> col:14 par1 'int'
C:\Users\munarid\AppData\Local\Temp\temp-6a463c.o : fatal error LNK1136: file danneggiato o non valido
